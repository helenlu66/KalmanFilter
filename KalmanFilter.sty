\documentclass{article}
\usepackage[utf8]{inputenc}

\title{Comp 141 Probabilistic Robotics Homework 1: Kalman Filter}
%\author{jsinapov }
\date{\vspace{-2em}}

\usepackage{natbib}
\usepackage{graphicx}
\usepackage{url}
\usepackage{amsmath}
\usepackage{hyperref}
\begin{document}

\maketitle

\section{Kalman Filter: Prediction}
Code available at: \url{https://github.com/helenlu66/KalmanFilter.git}.

A balloon drone has encountered a glitch in its program and needs to reboot its on-board computer. While rebooting, the drone is helpless and cannot issue motor commands. To help the drone, you'll need some understanding of the Kalman filter algorithm. \\

The drone operates in a 1-D world where $x_t$ is the position at time $t$, while $\dot{x}_t$ and $\ddot{x}_t$ are the velocity and acceleration. For simplicity, assume that $\bigtriangleup t = 1$. \\

%In this homework, the task is to design a Kalman Filter for a simple dynamical system. You are the captain of a sailboat in a 1-D ocean where $x_t$ is the position of your boat at time $t$, while $\dot{x}_t$ and $\ddot{x}_t$ are the velocity and acceleration. For simplicity, assume that $\bigtriangleup t = 1$.

Due to random wind fluctuations, at each new time step, your acceleration is set randomly accordingly to the distribution $\mathcal{N}(\mu_{wind}, \sigma_{wind}^2)$, where $\mu_{wind} = 0.0$ and $\sigma_{wind}^2 = 1.0$.\\

{\bf Question 1.1}: The minimal state vector for the Kalman Filter is the state vector for the Kalman Filter is $\left( \begin{smallmatrix} x_t & \dot{x}_t \end{smallmatrix} \right)$


{\bf Question 1.2}: The state transition model: 
\[
\begin{bmatrix}
x_t \\
\dot{x}_t \\
\end{bmatrix}
=
\begin{bmatrix}
1 & \Delta t  \\
0 & 1         \\
\end{bmatrix}
\cdot
\begin{bmatrix}
x_{t-1} \\
\dot{x}_{t-1} \\
\end{bmatrix}
+
\begin{bmatrix}
0  \\
0  \\
\end{bmatrix}
\cdot
\begin{bmatrix}
0 \\
\end{bmatrix}
\]
where matrix A is 
\[\begin{bmatrix}
1 & \Delta t \\
0 & 1        \\
\end{bmatrix}\]
=
\[\begin{bmatrix}
1 & 1 \\
0 & 1 \\
\end{bmatrix}\]
and matrix B is 0 since there's no control signal
\[\begin{bmatrix}
0 \\
0 \\
\end{bmatrix}\]
state transition probability function $p(x_t | u_t, x_{t-1}) = det(2 \pi R_t^{-1})^{-\frac{1}{2}} \exp\left(-\frac{1}{2}(x_t - A_tx_{t-1} - B_tu_t)^T R_t^{-1} (x_t - A_tx_{t-1} - B_tu_t)\right)$
where R is 
\[\begin{bmatrix}
\frac{1}{4}\Delta t^4 & \frac{1}{2}\Delta t^3 \\
\frac{1}{2}\Delta t^3 &     \Delta t^2        \\
\end{bmatrix}
\sigma_{wind}^2
\]
=
\[\begin{bmatrix}
\frac{1}{4} & \frac{1}{2}  \\
\frac{1}{2} & 1 \\
\end{bmatrix}\]


{\bf Question 1.3}: assuming the initial time step is t=0,
\[\mu_{t1} = \begin{bmatrix} 0 \\ 0 \\ \end{bmatrix}
\sigma_{t1} = \begin{bmatrix} 0.25 & 0.5 \\ 0.5 & 1.0 \end{bmatrix}\]
\[\mu_{t2} = \begin{bmatrix} 0 \\ 0 \\ \end{bmatrix}
\sigma_{t2} = \begin{bmatrix} 2.5 & 2.0 \\ 2.0 & 2.0 \end{bmatrix}\]
\[\mu_{t3} = \begin{bmatrix} 0 \\ 0 \\ \end{bmatrix}
\sigma_{t3} = \begin{bmatrix} 8.75 & 4.5 \\ 4.5 & 3.0 \end{bmatrix}\]
\[\mu_{t4} = \begin{bmatrix} 0 \\ 0 \\ \end{bmatrix}
\sigma_{t4} = \begin{bmatrix} 21.0 & 8.0 \\ 8.0 & 4.0 \end{bmatrix}\]
\[\mu_{t5} = \begin{bmatrix} 0 \\ 0 \\ \end{bmatrix}
\sigma_{t5} = \begin{bmatrix} 41.25 & 12.5 \\ 12.5 & 5.0 \end{bmatrix}\]

{\bf Question 1.4}: the uncertainty ellipse of the joint posterior over $x$ and $\dot{x}$ in a diagram where $x$ is the horizontal and $\dot{x}$ is the vertical axis for t=1 to t=5
\begin{figure}[htbp]
\centering
\includegraphics[scale=0.7]{uncertainty_ellipse_t1.png} \caption{Uncertainty Ellipse at t=1}
\label{fig:uncertainty_ellipse_t1}
\end{figure}

\begin{figure}[htbp]
\centering
\includegraphics[scale=0.7]{uncertainty_ellipse_t2.png} \caption{Uncertainty Ellipse at t=2}
\label{fig:uncertainty_ellipse_t2}
\end{figure}

\begin{figure}[htbp]
\centering
\includegraphics[scale=0.7]{uncertainty_ellipse_t3.png} \caption{Uncertainty Ellipse at t=3}
\label{fig:uncertainty_ellipse_t3}
\end{figure}

\begin{figure}[htbp]
\centering
\includegraphics[scale=0.7]{uncertainty_ellipse_t4.png} \caption{Uncertainty Ellipse at t=4}
\label{fig:uncertainty_ellipse_t4}
\end{figure}

\begin{figure}[htbp]
\centering
\includegraphics[scale=0.7]{uncertainty_ellipse_t5.png} \caption{Uncertainty Ellipse at t=5}
\label{fig:uncertainty_ellipse_t5}
\end{figure}

\section{Kalman Filter: Measurement}

Prediction alone will result in greater and greater uncertainty as time goes on. Fortunately, your drone has a GPS sensor, which in expectation, measures the true position. However, the measurement is corrupted by Gaussian noise with covariance $\sigma_{gps}^2 = 8.0$.\\

{\bf Question 2.1}: the measurement model:
\[C = \begin{bmatrix} 1.0 & 0.0 \\ \end{bmatrix}\]
\[Q = \begin{bmatrix} 8.0 \end{bmatrix}\]

{\bf Question 2.2}: Suppose at time $t = 5$, we obtain $z = 10$. Then:
\[\bar{\sigma_{t5}} = 
\begin{bmatrix}
41.25 & 12.5 \\ 
12.5  & 5.  \\
\end{bmatrix}\]
\[\bar{\mu_{t5}} = 
\begin{bmatrix}
0.0\\ 
0.0\\
\end{bmatrix}\]
\[\sigma_{t5} = 
\begin{bmatrix}
6.70050761 & 2.03045685 \\
2.03045685 & 1.82741117 \\
\end{bmatrix}\]
\[\mu_{t5} = 
\begin{bmatrix}
8.37563452 \\
2.53807107 \\
\end{bmatrix}\]
The simulated positions of the drone from t=1 to t=5 are:
\[x_{t1} = 0.0\]
\[x_{t2} = -0.27283527\]
\[x_{t3} = 0.49668245\]
\[x_{t4} = 3.00267159\]
\[x_{t5} = 6.22960415\]
The measurement at t=5 is:
\[z_{t5} = 8.58188962\] with a 37.75\% error compared to ground truth\\

{\bf Question 2.3}: at time $t=20$, the expected error in terms of distance from the true position for each sensor fail probability is:\\
for $p_{gps-fail}$ = 0.1, expected distance from true position = 2.10 \\
for $p_{gps-fail}$ = 0.5, expected distance from true position = 3.88 \\
for $p_{gps-fail}$ = 0.9, expected distance from true position = 16.14
\begin{figure}[htbp]
    \centering
    \includegraphics[scale=0.7]{error_distance_bar_plot.png} \caption{Error Distance Bar Plot for Each Sensor Fail Probability}
    \label{Error Distance Bar Plot}
\end{figure}

\section{Kalman Filter: Movement}

{\bf Question 3.1} The drone is now fully operational and can not only take measurements, but also issue motor commands in the form of acceleration commands to its propeller. For example, a command of $1.0$ will increase the drone's velocity by $1.0$. Revisit Question 1.3 to provide the matrix $B$. If at time $t-1$, the drone's position and velocity are $5.0$ and $1.0$, compute the mean estimate for the state at time $t$ given a motor command of $1.0$.  Your answer should be based on the constants provided but also include a random variable due to the wind effects. State the distribution of that random variable. 
The updated B matrix is: 
\[
    \begin{bmatrix}
        0.5 & 0.5 \\
        1.0 & 1.0 \\
    \end{bmatrix}\
\]
The u matrix is:
\[
    \begin{bmatrix}
        1.0 \\
        \mathcal{N}(\mu_{wind}, \sigma_{wind}^2) \\
    \end{bmatrix}\
\]
where the distribution of the random variable is $\mathcal{N}(\mu_{wind}, \sigma_{wind}^2)$ \\ 
The estimated $\mu$ at time $t$ is
\[
    \begin{bmatrix}
        6.55246225 \\
        2.1049245 \\
    \end{bmatrix}\
\]

%\bibliographystyle{plain}
%\bibliography{references}
\end{document}
